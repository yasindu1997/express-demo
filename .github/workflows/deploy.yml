name: Deploy Express to EC2 (PM2 id 0)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci || npm install

      - name: Skip tests (none defined)
        run: echo "Skipping tests"

  deploy:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Add EC2 host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}

      - name: Deploy to EC2 (SSH)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          envs: GITHUB_REF_NAME,EC2_PATH
          script: |
            set -e
            cd "${EC2_PATH}"

            # --- Load Node if installed via nvm (non-login shell) ---
            if [ -d "$HOME/.nvm" ]; then
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
              [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
              # pick a version; adjust if you use a different one
              nvm use --lts || nvm use 20 || true
            fi

            # Fallback: add common binary paths in case node/npm live there
            export PATH="$PATH:/usr/local/bin:/usr/bin:$HOME/bin"

            # Sanity check
            if ! command -v npm >/dev/null 2>&1; then
              echo "ERROR: npm not found in PATH. Install Node (Option A) or ensure nvm is installed for this user."
              exit 127
            fi

            BRANCH="${GITHUB_REF_NAME:-main}"
            echo "Deploying branch: $BRANCH"
            git fetch --all --prune
            git reset --hard "origin/$BRANCH"

            # Install production deps only
            if [ -f package-lock.json ]; then
              npm ci --omit=dev
            else
              npm install --omit=dev
            fi

            # Optional build (safe no-op if not present)
            if [ -f tsconfig.json ] || [ -f webpack.config.js ]; then
              npm run build || true
            fi

            # Ensure pm2 exists (global under nvm is fine)
            if ! command -v pm2 >/dev/null 2>&1; then
              npm i -g pm2
            fi

            # Reload PM2 by process ID 0; fallback to start
            if pm2 describe 0 >/dev/null 2>&1; then
              echo "Reloading PM2 process id 0"
              pm2 reload 0
            else
              echo "PM2 id 0 not found; starting index.js"
              pm2 start index.js --name express-app
            fi

            pm2 save
        env:
          EC2_PATH: ${{ secrets.EC2_PATH }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
